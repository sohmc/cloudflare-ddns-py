name: Cloudflare DDNS

on: 
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - moving-to-github-actions
      - master
      - main
  release:
    types: published
  # schedule:
    # 4am every Saturday
    # - cron: '0 4 * * 6'

defaults:
  run:
    shell: bash

jobs:
  raw-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi      

      - name: Test Python Script
        run: bash .travis/test_python3.bash
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
          GLOBAL_API_KEY: ${{ secrets.GLOBAL_API_KEY }}
          CF_EMAIL: ${{ secrets.CF_EMAIL }}
          TRAVIS_OS_NAME: linux
          SUBDOMAIN: travis
          ZONE: ${{ secrets.ZONE }}
  
  build-binaries:
    if: github.event_name == 'pull_request'
    needs: raw-testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64]
        python-version: [3.9]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi      

      - name: Building ${{ matrix.os }} Binary
        id: build_binary
        run: bash .travis/build_binary.bash
        env:
          TRAVIS_OS_NAME: ${{ matrix.os }}
          TRAVIS_CPU_ARCH: ${{ matrix.arch }}
      
      - name: Test ${{ matrix.os }} Binary
        run: bash .travis/test_binary.bash
        env:
          TRAVIS_OS_NAME: ${{ matrix.os }}
          TRAVIS_CPU_ARCH: ${{ matrix.arch }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          GLOBAL_API_KEY: ${{ secrets.GLOBAL_API_KEY }}
          CF_EMAIL: ${{ secrets.CF_EMAIL }}
          SUBDOMAIN: travis
          ZONE: ${{ secrets.ZONE }}

      - name: Upload ${{ matrix.os }} Binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./dist/${{ steps.build_binary.outputs.BIN_NAME }}


  create-release-draft:
    if: github.event_name == 'pull_request'
    needs: build-binaries

    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64]

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./release/

      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.number }}
          release_name: Release ${{ github.event.number }}-${{ github.run_id }}.${{ github.sha }}
          body: Release for PR #${{ github.event.number }} on Actions run ${{ github.run_id }} via commit ${{ github.sha }}
          draft: true
      
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/*
